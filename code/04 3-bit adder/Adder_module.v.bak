module Adder_module(a, b, c_in, s, c_out);
	input reg [2:0]a, b;
	input reg c_in;
	output reg [2:0]s, c_out;
	
	always @ (a[0] or a[1] or a[2] or b[0] or b[1] or b[2] or c_in)
		begin
			s[0] <= c_in ^ (a[0] ^ b[0]);
			c_out[0] <= (a[0]&b[0]) | (c_in & (a[0]^b[0]));
			s[1] <= c_out[0] ^ (a[1] ^ b[1]);
			c_out[1] <= (a[1]&b[1]) | (c_out[0] & (a[1]^b[1]));
			s[2] <= c_out[1] ^ (a[2] ^ b[2]);
			c_out[2] <= (a[2]&b[2]) | (c_out[1] & (a[2]^b[2]));
	
endmodule
